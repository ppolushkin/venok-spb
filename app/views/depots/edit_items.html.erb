<link rel="stylesheet" media="screen" href="/stylesheets/jquery.handsontable.full.css">

<script src="/javascripts/jquery.handsontable.full.js"></script>


<script type="text/javascript">

    $(document).ready(function () {
        function firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {
            Handsontable.TextCell.renderer.apply(this, arguments);
            td.style.fontWeight = 'bold';
            td.style.color = 'green';
            td.style.background = '#CEC';
        }

        function negativeValueRenderer(instance, td, row, col, prop, value, cellProperties) {
            Handsontable.TextCell.renderer.apply(this, arguments);
            if (parseInt(value, 10) < 0) { //if row contains negative number
                td.className = 'negative'; //add class "negative"
            }

            if (!value || value === '') {
                td.style.background = '#EEE';
            }
            else {
                if (value === 'Nissan') {
                    td.style.fontStyle = 'italic';
                }
                td.style.background = '';
            }
        }

        var data = [
            ["", "Kia", "Nissan", "Toyota", "Honda"],
            ["2008", -5, '', 12, 13],
            ["2009", '', -11, 14, 13],
            ["2010", '', 15, -12, "readOnly"]
        ];

        Handsontable.cellLookup.renderer.negativeValueRenderer = negativeValueRenderer; //maps function to lookup string

        var container = $("#example1");
        container.handsontable({
            data:data,
            startRows:5,
            startCols:5,
            minSpareRows:1,
            contextMenu:true,
            onSelection:function (row, col, row2, col2) {
                var meta = container.handsontable('getCellMeta', row2, col2);
                if (meta.isWritable == false) {
                    container.handsontable('updateSettings', {fillHandle:false});
                }
                else {
                    container.handsontable('updateSettings', {fillHandle:true});
                }
            },
            cells:function (row, col, prop) {
                var cellProperties = {};
                if (row === 0 || container.handsontable('getData')[row][col] === 'readOnly') {
                    cellProperties.readOnly = true; //make cell read-only if it is first row or the text reads 'readOnly'
                }
                if (row === 0) {
                    cellProperties.renderer = firstRowRenderer; //uses function directly
                }
                else {
                    cellProperties.renderer = "negativeValueRenderer"; //uses lookup map
                }
                return cellProperties;
            }
        });
    });
</script>

<div id="example1"></div>